apiVersion: apps/v1
kind: Deployment
metadata:
  name: nfhealthcheck
spec:
  selector:
    matchLabels:
      app: nfhealthcheck
  replicas: 1
  template: # template for the pods
    metadata:
      labels:
        app: nfhealthcheck
    spec:
      containers:
      - name: nfhealthcheck
        image: attilajak/nfhealthcheck:latest
        imagePullPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nrfc
spec:
  selector:
    matchLabels:
      app: nrfc
  replicas: 1
  template: # template for the pods
    metadata:
      labels:
        app: nrfc
    spec:
      containers:
      - name: nrfc
        image: attilajak/nrfc:latest
        env:
        - name: DUMMY
          value: production-microservice
        imagePullPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: nfhealthcheck-service

spec:
  # This defines which pods are going to be represented by this Service
  # The service becomes a network endpoint for either other services
  # or maybe external users to connect to (eg browser)
  selector:
    app: nfhealthcheck
  ports:
    - name: https
      port: 443
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: nrfc-service

spec:
  # This defines which pods are going to be represented by this Service
  # The service becomes a network endpoint for either other services
  # or maybe external users to connect to (eg browser)
  selector:
    app: nrfc
  ports:
    - name: https
      port: 443
  type: ClusterIP
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: pods-list
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["list", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: pods-list
subjects:
- kind: ServiceAccount
  name: default
  namespace: default
roleRef:
  kind: ClusterRole
  name: pods-list
  apiGroup: rbac.authorization.k8s.io
